syntax = "proto3";

package rps.rps;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rps/rps/params.proto";
import "rps/rps/system_info.proto";
import "rps/rps/games.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "rps/x/rps/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/rps/rps/params";
  
  }
  
  // Queries a SystemInfo by index.
  rpc SystemInfo (QueryGetSystemInfoRequest) returns (QueryGetSystemInfoResponse) {
    option (google.api.http).get = "/rps/rps/system_info";
  
  }
  
  // Queries a list of Games items.
  rpc Games    (QueryGetGamesRequest) returns (QueryGetGamesResponse) {
    option (google.api.http).get = "/rps/rps/games/{index}";
  
  }
  rpc GamesAll (QueryAllGamesRequest) returns (QueryAllGamesResponse) {
    option (google.api.http).get = "/rps/rps/games";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSystemInfoRequest {}

message QueryGetSystemInfoResponse {
  SystemInfo SystemInfo = 1 [(gogoproto.nullable) = false];
}

message QueryGetGamesRequest {
  string index = 1;
}

message QueryGetGamesResponse {
  Games games = 1 [(gogoproto.nullable) = false];
}

message QueryAllGamesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGamesResponse {
  repeated Games                                  games      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

